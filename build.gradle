plugins {
    id 'java'
}

group = 'dev.foton'
version = '0.1'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = "https://papermc.io/repo/repository/maven-public/"
    }
    maven {
        name = 'jitpack.io'
        url = 'https://jitpack.io'
    }
    maven {
        url = "https://repo.dmulloy2.net/repository/public/"
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.18.1-R0.1-SNAPSHOT'
    compileOnly "io.papermc.paper:paper-api:1.18.1-R0.1-SNAPSHOT"
    compileOnly "com.github.juliarn:npc-lib:2.6-RELEASE"
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.7.0";
    compileOnly files("libs/AdvancedColorApi.jar")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar{
    destinationDir = file("out/")
}